type Mutation {
  generate_report (
    student_id: Int!
    period_id: Int!
  ): ReportOutput
}

type Mutation {
  generate_template_report (
    cycle: String!
  ): TemplateReportOutput
}

type Mutation {
  invitation_generate_token (
    user_id: bigint!
    group_id: bigint!
  ): GenerateTokenOutput
}

type Mutation {
  invitation_signup_token (
    token: String!
    email: String!
    password: String!
  ): SignupTokenOutput
}

type Mutation {
  invitation_verify_token (
    token: String!
  ): VerifyTokenOutput
}

type Mutation {
  load_socle (
    group_id: bigint!
  ): LoadSocleOutput
}

type Mutation {
  login (
    email: String!
    password: String!
  ): LoginOutput
}

type Mutation {
  ping (
    secret: String!
  ): PingOutput
}

type Mutation {
  signup (
    email: String!
    password: String!
  ): SignupOutput!
}

type SignupOutput {
  errorKnownEmail : Boolean!
  errorWeakPassword : Boolean!
  token : String
  id : Int
  group : Int
}

type LoginOutput {
  error : Boolean!
  token : String
  id : Int
  group_id : Int
}

type LoadSocleOutput {
  errorUnknownGroupId : Boolean!
  errorNonEmptySocle : Boolean!
  errorUnknown : Boolean!
}

type GenerateTokenOutput {
  token : String!
}

type VerifyTokenOutput {
  valid : Boolean!
  too_old : Boolean!
  group_id : Int
  group_name : String
  user_id : Int
  user_firstname : String
  user_lastname : String
}

type SignupTokenOutput {
  valid : Boolean!
  too_old : Boolean!
  error_weak_password : Boolean!
  token : String
  user_id : Int
  group_id : Int
}

type PingOutput {
  default_socle_competency : Int!
  default_socle_competency_subject : Int!
  default_socle_competency_template : Int!
  default_socle_container : Int!
  default_socle_subject : Int!
  eval_comment : Int!
  eval_evaluation : Int!
  eval_observation : Int!
  eval_period : Int!
  group : Int!
  report : Int!
  socle_competency : Int!
  socle_competency_subject : Int!
  socle_competency_template : Int!
  socle_container : Int!
  socle_subject : Int!
  student : Int!
  user : Int!
}

type ReportOutput {
  report_id : Int!
  pdf_path : String!
  json_path : String!
}

type TemplateReportOutput {
  cycle : String!
}

